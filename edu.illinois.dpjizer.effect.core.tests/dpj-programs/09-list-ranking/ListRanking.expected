DPJRuntime.DPJUtils.<>permuteInt(int[]<R>) writes R invokes java.lang.Math.random() where { this -> Root : * }
DPJRuntime.DPJUtils.<>print(int[]<R>) invokes java.io.PrintStream.print(java.lang.String) where { this -> Root : * }
DPJRuntime.DPJUtils.<T>permute(T[]<R>) invokes DPJRuntime.DPJUtils.<T>swap(T[]<R>,int,int) where { this -> Root : *, R -> R }, java.lang.Math.random() where { this -> Root : * }
DPJRuntime.DPJUtils.<T>print(T[]<R>) invokes java.io.PrintStream.print(java.lang.String) where { this -> Root : * }
DPJRuntime.DPJUtils.<T>swap(T[]<R>,int,int) writes R
DPJRuntime.DPJUtils.DPJUtils() invokes java.lang.Object.Object()
DPJRuntime.DPJUtils.log2(int) pure
Harness.Harness(java.lang.String,java.lang.String[]) invokes Harness.Harness(java.lang.String,java.lang.String[],int,int)
Harness.Harness(java.lang.String,java.lang.String[],int,int) writes Root invokes Harness.usage(), java.lang.Integer.parseInt(java.lang.String) where { this -> Root : * }, java.lang.Object.Object(), java.lang.System.exit(int) where { this -> Root : * }
Harness.initialize() pure
Harness.run() reads Root invokes Harness.initialize(), Harness.runCleanup(), Harness.runTest(), Harness.runWork(), Harness.usage(), java.io.PrintStream.println(java.lang.String) where { this -> Root : * }, java.lang.String.equals(java.lang.Object) where { this -> Root : * }, java.lang.System.exit(int) where { this -> Root : * }, java.lang.System.nanoTime() where { this -> Root : * }
Harness.runCleanup() pure
Harness.runTest() pure
Harness.runWork() pure
Harness.usage() reads Root invokes java.io.PrintStream.println(java.lang.String) where { this -> Root : * }
List.List(int) writes Root, Root : [?] invokes java.lang.Object.Object()
List.rank() reads Root, Root : [?] invokes DPJRuntime.DPJUtils.log2(int) where { this -> Root : * }, ListNode.initRank() where { this -> Root : [?] : *, Parent -> Root : [?] }, ListNode.updateNbrRank() where { this -> Root : [?] : *, Parent -> Root : [?] }, ListNode.updateRank() where { this -> Root : [?] : *, Parent -> Root : [?] }
ListNode.ListNode() invokes java.lang.Object.Object()
ListNode.initRank() writes Parent : ListNode.Rank
ListNode.updateNbrRank() reads Root : * : ListNode.Rank writes Parent : ListNode.NbrRank
ListNode.updateRank() reads Parent : ListNode.NbrRank writes Parent : ListNode.Rank
ListRanking.ListRanking(java.lang.String[]) invokes Harness.Harness(java.lang.String,java.lang.String[],int,int)
ListRanking.initialize() reads Root : [?] writes Root, Root : [?] : ListNode.Rank invokes ListRanking.permutation(int) overrides Harness.initialize()
ListRanking.main(java.lang.String[]) invokes Harness.run() where { this -> Root : * }
ListRanking.permutation(int) writes Root invokes ListRanking.swap(int[],int,int), java.util.Random.nextFloat() where { this -> Root : * }
ListRanking.runTest() reads Root, Root : [?], Root : [?] : ListNode.Rank overrides Harness.runTest()
ListRanking.runWork() reads Root invokes List.rank() where { this -> Root : * } overrides Harness.runWork()
ListRanking.swap(int[],int,int) writes Root
ListRanking.usage() reads Root invokes java.io.PrintStream.println(java.lang.String) where { this -> Root : * } overrides Harness.usage()
